---
- name: Retrieve the openstackclient Pod
  kubernetes.core.k8s_info:
    kubeconfig: "{{ cifmw_openshift_kubeconfig }}"
    namespace: "openstack"
    api_key: "{{ cifmw_openshift_token | default(omit) }}"
    context: "{{ cifmw_openshift_context | default(omit) }}"
    kind: "Pod"
    name: "openstackclient"
  register: _cifmw_update_openstackclient_pod

- name: Fail if openstackclient Pod is not found
  ansible.builtin.fail:
    msg: "No openstackclient Pod found in the openstack namespace!"
  when: _cifmw_update_openstackclient_pod.resources | length == 0

- name: Set the openstackclient image fact
  ansible.builtin.set_fact:
    openstackclient_image: "{{ _cifmw_update_openstackclient_pod | community.general.json_query('resources[0].spec.containers[0].image') | default('') }}"

- name: Login to registry.redhat.io if needed
  when: "'registry.redhat.io' in openstackclient_image"
  block:
    - name: Fail if cifmw_registry_token.credentials is not defined
      ansible.builtin.fail:
        msg: "cifmw_registry_token.credentials is not defined, cannot login to registry.redhat.io"
      when: "'credentials' not in cifmw_registry_token | default({})"

    - name: Login to registry.redhat.io
      containers.podman.podman_login:
        username: "{{ cifmw_registry_token.credentials.username }}"
        password: "{{ cifmw_registry_token.credentials.password }}"
        registry: "registry.redhat.io"
      no_log: true

- name: Collect and save OpenStack config files
  ansible.builtin.include_tasks: collect_openstackclient_config.yml
  loop:
    - 'clouds.yaml'
    - 'secure.yaml'
  loop_control:
    label: "{{ item }}"

- name: Create local openstack wrapper script
  ansible.builtin.copy:
    dest: "{{ cifmw_update_artifacts_basedir }}/openstack"
    mode: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail
      OS_CLOUD=default /usr/bin/openstack --insecure "$@"

- name: Ensure lopenstackclient container is running
  containers.podman.podman_container:
    name: lopenstackclient
    image: "{{ openstackclient_image }}"
    state: started
    net: host
    volumes:
      - "{{ cifmw_update_artifacts_basedir }}/clouds.yaml:/home/cloud-admin/.config/openstack/clouds.yaml:ro,Z"
      - "{{ cifmw_update_artifacts_basedir }}/secure.yaml:/home/cloud-admin/.config/openstack/secure.yaml:ro,Z"
      - "{{ cifmw_update_artifacts_basedir }}/openstack:/home/cloud-admin/.local/bin/openstack:ro,Z"
    command: ['/usr/bin/sleep', 'infinity']
